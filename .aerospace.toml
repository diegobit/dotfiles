# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# It's not necessary to copy all keys to your config.
# If the key is missing in your config, "default-config.toml" will serve as a fallback

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

############################
# SYSTEM
############################
# Start AeroSpace at login
start-at-login = true

# ctrl-shift-cmd-f5 = 'reload-config'
after-startup-command = [
  'exec-and-forget borders'
]

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 40

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Possible values: (qwerty|dvorak)
key-mapping.preset = 'qwerty'

# Mouse follows focus
# see: https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
#   NOTE: Commented, because it's not reliable. It moves the mouse *before* the
#   focus is changed, resulting in moving the mouse in weird places.
# on-focus-changed = ['move-mouse window-lazy-center']

# Mouse follows focus when focused monitor changes
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Use this to move to center of focused app - bug: when clicking on menubar in other monitor
# the mouse goes back to the previously focused monitor
# on-focused-monitor-changed = ['move-mouse window-lazy-center']
# To move mouse to center of monitor, use this instead:
# on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
## Gaps without JankyBorders, apps slightly overlapped
[gaps]
inner.horizontal = -3
inner.vertical =   -3
outer.left =       0
outer.bottom =     0
outer.top =        0
outer.right =      0

## Gaps when using JankyBorders
# [gaps]
# inner.horizontal = 4
# inner.vertical =   4
# outer.left =       3
# outer.bottom =     3
# outer.top =        3
# outer.right =      3

############################
# MAIN BINDINGS
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
############################
[mode.main.binding]

### LAYOUT ###
# See: https://nikitabobko.github.io/AeroSpace/commands#layout
ctrl-shift-cmd-f = 'fullscreen'

ctrl-shift-cmd-r = 'layout horizontal vertical' # [R]otate
ctrl-shift-cmd-s = 'layout tiles accordion' # [S]tacked
ctrl-shift-cmd-a = 'layout tiling' # [A]ttach
ctrl-shift-cmd-d = 'layout floating' # [D]etach

ctrl-shift-cmd-h = ['focus left', 'move-mouse window-lazy-center']
ctrl-shift-cmd-j = ['focus down', 'move-mouse window-lazy-center']
ctrl-shift-cmd-k = ['focus up', 'move-mouse window-lazy-center']
ctrl-shift-cmd-l = ['focus right', 'move-mouse window-lazy-center']

ctrl-shift-cmd-left  = 'move left'
ctrl-shift-cmd-down  = 'move down'
ctrl-shift-cmd-up    = 'move up'
ctrl-shift-cmd-right = 'move right'

ctrl-shift-cmd-alt-h = 'join-with left'
ctrl-shift-cmd-alt-j = 'join-with down'
ctrl-shift-cmd-alt-k = 'join-with up'
ctrl-shift-cmd-alt-l = 'join-with right'

ctrl-shift-cmd-g = 'flatten-workspace-tree' # [G]round

### RESIZE ###
# similar to vim windows: <C-w> plus '-', '+', '<' or '>'
# the difference is that, there, to do '+', '<' or '>' we use also shift.
# We cannot add shift to hyper!
ctrl-shift-cmd-quote= 'balance-sizes' # cannot use '=', backslash is maximise in nvim
ctrl-shift-cmd-minus = 'resize height -100'
ctrl-shift-cmd-equal = 'resize height +100'
ctrl-shift-cmd-comma = 'resize width -100'
ctrl-shift-cmd-period = 'resize width +100'
# Old commands: smart changes respect to parent. I prefer to do it manually
# because nvim and kitty don't have it
# ctrl-shift-cmd-minus = 'resize smart -100'
# ctrl-shift-cmd-equal = 'resize smart +100'

### WORKSPACE ###
# Main screen uses bottom row: 'z' to '/'
# External screens use: 1 and 2
# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
ctrl-shift-cmd-y = 'workspace Y'
ctrl-shift-cmd-u = 'workspace U'
ctrl-shift-cmd-i = 'workspace I'
ctrl-shift-cmd-o = 'workspace O'
ctrl-shift-cmd-p = 'workspace P'
ctrl-shift-cmd-quote = 'workspace qt'
ctrl-shift-cmd-semicolon = 'workspace sc'
ctrl-shift-cmd-slash = 'workspace sl'
ctrl-shift-cmd-backslash = 'workspace bs'

ctrl-shift-cmd-alt-y = 'move-node-to-workspace Y'
ctrl-shift-cmd-alt-u = 'move-node-to-workspace U'
ctrl-shift-cmd-alt-i = 'move-node-to-workspace I'
ctrl-shift-cmd-alt-o = 'move-node-to-workspace O'
ctrl-shift-cmd-alt-p = 'move-node-to-workspace P'
ctrl-shift-cmd-alt-quote = 'move-node-to-workspace qt'
ctrl-shift-cmd-alt-semicolon = 'move-node-to-workspace sc'
ctrl-shift-cmd-alt-slash = 'move-node-to-workspace sl'
ctrl-shift-cmd-alt-backslash = 'move-node-to-workspace bs'

# back and forth between two most recent workspaces
# ctrl-shift-cmd-tab = 'workspace-back-and-forth'
ctrl-shift-cmd-6 = 'workspace-back-and-forth'

### SECONDARY DISPLAY ###
ctrl-shift-cmd-m = [ 'focus-monitor --wrap-around next', 'move-mouse window-lazy-center' ]
ctrl-shift-cmd-alt-m = 'move-node-to-monitor --wrap-around next'
ctrl-shift-cmd-alt-w = 'move-workspace-to-monitor --wrap-around next'

[workspace-to-monitor-force-assignment]
# GIVEN: Built-in=B, External=E
# THERE ARE THREE CASES:
#   1. ONE MONITOR:
#     - E1=Main or B=Main: should use 'Z' to '/'
#   2. TWO MONITORS:
#     - E1=Main and B=secondary:
#       - workspace 1 is assigned to B
#     - E1=Main and E2=secondary:
#       - workspace 1 is assigned to E2
#   3. THREE MONITORS:
#     - E1=Main, E2=secondary, B=third: 
#       - workspace 1 is assigned to B
#       - workspace 2 gets assigned to E2
# B = ['^Built-in Retina Display$']
Y = 'main'
'sc' = 'secondary'
'sl' = 3

### AUTOMATIONS ###
# All apps defaults to floating
# [[on-window-detected]]
# check-further-callbacks = true
# run = 'layout floating'

[[on-window-detected]]
if.app-id = 'company.thebrowser.Browser'
# if.window-title-regex-substring = 'google.com/search?q=ciao'
run = 'layout floating'

# [[on-window-detected]]
# if.app-id = 'company.thebrowser.Browser'
# if.window-title-regex-substring = 'ciao - Cerca con Google'
# run = 'layout floating'

# [[on-window-detected]]
# if.app-id = 'ru.keepcoder.Telegram'
# run = 'layout floating'
#
# [[on-window-detected]]
# if.app-id = 'org.pqrs.Karabiner-EventViewer'
# run = 'layout floating'
#
# [[on-window-detected]]
# if.app-id = 'org.pqrs.Karabiner-Elements.Settings'
# run = 'layout floating'
#
# [[on-window-detected]]
# if.app-id = 'com.runningwithcrayons.Alfred-Preferences'
# run = 'layout floating'
#
# [[on-window-detected]]
# if.app-id = 'com.apple.ActivityMonitor'
# run = 'layout floating'
#
# [[on-window-detected]]
# if.app-id = 'com.keepassium.ios'
# run = 'layout floating'
#
[[on-window-detected]]
if.app-id = 'net.freemacsoft.AppCleaner'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.AddressBook'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.FaceTime'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.PhotoBooth'
run = 'layout floating'

# [[on-window-detected]]
# if.app-id = 'com.tinyspeck.slackmacgap'
# run = 'layout floating'
#
# [[on-window-detected]]
# if.app-id = 'com.apple.finder'
# run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.colliderli.iina'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.QuickTimePlayerX'
run = 'layout floating'

